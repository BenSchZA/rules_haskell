workspace(name = "cat_hs")

RULES_HASKELL_VERSION = "e134749dbdd926515be1d30495dafd8c72c26a61"
http_archive(
  name = "io_tweag_rules_haskell",
  strip_prefix = "rules_haskell-{}".format(RULES_HASKELL_VERSION),
  urls = ["https://github.com/tweag/rules_haskell/archive/{}.tar.gz".format(RULES_HASKELL_VERSION)]
)

load("@io_tweag_rules_haskell//haskell:repositories.bzl", "haskell_repositories")
haskell_repositories()

http_archive(
  name = "io_tweag_rules_nixpkgs",
  strip_prefix = "rules_nixpkgs-0.3.1",
  urls = ["https://github.com/tweag/rules_nixpkgs/archive/v0.3.1.tar.gz"],
)

local_repository(
  name = "nix",
  path = "nix",
)

load("@io_tweag_rules_nixpkgs//nixpkgs:nixpkgs.bzl", "nixpkgs_package")

nixpkgs_package(
  name = "zlib",
  repositories = { "nixpkgs": "@nix//:default.nix" },
)

nixpkgs_package(
  name = "zlib-dev",
  attribute_path = "zlib.dev",
  repositories = { "nixpkgs": "@nix//:default.nix" },
  build_file_content = """
package(default_visibility = [ "//visibility:public" ])
filegroup(
  name = "include",
  srcs = glob(["include/**/*.h"]),
  path = "external/haskell_zlib",
)
"""
)

nixpkgs_package(
  name = "ghc",
  attribute_path = "haskell.compiler.ghc844",
  repositories = { "nixpkgs": "@nix//:default.nix" },
  build_file = "@ai_formation_hazel//:BUILD.ghc",
)

register_toolchains("//:ghc")

HAZEL_VERSION = "925293994f88799ba550fd5cf3995104d1f2972c"
http_archive(
  name = "ai_formation_hazel",
  strip_prefix = "hazel-{}".format(HAZEL_VERSION),
  urls = ["https://github.com/formationai/hazel/archive/{}.tar.gz".format(HAZEL_VERSION)],
)

load("@ai_formation_hazel//:hazel.bzl", "hazel_repositories")
load("//hazel:packages.bzl", "core_packages", "packages")

hazel_repositories(
  core_packages = core_packages,
  packages = packages,
  extra_libs = {
    "z": "@zlib//:lib/libz.so",
  },
  extra_libs_hdrs = {
    "z": "@zlib-dev//:include",
  },
  extra_libs_strip_include_prefix = {
    "z": "/external/zlib-dev/include",
  },
)
